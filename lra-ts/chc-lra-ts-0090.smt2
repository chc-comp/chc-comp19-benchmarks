;; Original file: term_252.smt2
(set-logic HORN)
(declare-fun starexecinv1 (Real Real Real Real) Bool)

(assert (forall ((|gh0prime| Real)
         (|XXX0prime| Real)
         (|XXX1prime| Real)
         (|gh1prime| Real))
  (let ((a!1 (> |gh0prime| (* (+ 0 (- 1)) |XXX0prime|)))
        (a!2 (> |gh0prime| (* (+ 0 (- 1)) |XXX1prime|)))
        (a!3 (> |gh1prime| (* (+ 0 (- 1)) |XXX0prime|)))
        (a!4 (> |gh1prime| (* (+ 0 (- 1)) |XXX1prime|)))
        (a!5 (+ (* (+ 0 1) |XXX0prime|)
                (* (+ 0 (- 1)) |XXX1prime|)
                (+ 0 1)))
        (a!6 (+ (* (+ 0 (- 1)) |XXX1prime|) (+ 0 1)))
        (a!7 (+ (* (+ 0 (- 1)) |XXX0prime|)
                (* (+ 0 (- 1)) |XXX1prime|)
                (+ 0 1)))
        (a!8 (+ (* (+ 0 (- 1)) |XXX0prime|)
                (* (+ 0 1) |XXX1prime|)
                (+ 0 1)))
        (a!9 (> |gh0prime| (+ (* (+ 0 1) |XXX0prime|) (+ 0 1))))
        (a!10 (> |gh0prime|
                 (+ (* (+ 0 1) |XXX0prime|)
                    (* (+ 0 1) |XXX1prime|)
                    (+ 0 1)))))
    (=> (and true
             (> |gh0prime| |XXX0prime|)
             (> |gh0prime| |XXX1prime|)
             a!1
             a!2
             (> |gh1prime| |XXX0prime|)
             (> |gh1prime| |XXX1prime|)
             a!3
             a!4
             (> |gh1prime| (+ 0 1))
             (> |gh1prime| a!5)
             (> |gh0prime| (+ 0 1))
             (> |gh0prime| a!5)
             (> |gh0prime| a!6)
             (> |gh0prime| a!7)
             (> |gh0prime| a!8)
             a!9
             a!10)
        (starexecinv1 |XXX0prime| |XXX1prime| |gh0prime| |gh1prime|)))))
(assert (forall ((|XXX0| Real)
         (|XXX1| Real)
         (gh0 Real)
         (gh1 Real)
         (|XXX0prime| Real)
         (r Real)
         (|XXX1prime| Real)
         (r1 Real)
         (|gh1prime| Real)
         (|gh0prime| Real))
  (let ((a!1 (and (= |gh1prime| (- gh1 (+ 0 1)))
                  (> gh1 (+ 0 0))
                  (= |gh0prime| gh0)))
        (a!2 (> |gh1prime| (* (+ 0 (- 1)) |XXX0prime|)))
        (a!3 (> |gh1prime| (* (+ 0 (- 1)) |XXX1prime|)))
        (a!4 (+ (* (+ 0 1) |XXX0prime|)
                (* (+ 0 (- 1)) |XXX1prime|)
                (+ 0 1)))
        (a!5 (+ (* (+ 0 (- 1)) |XXX1prime|) (+ 0 1)))
        (a!6 (+ (* (+ 0 (- 1)) |XXX0prime|)
                (* (+ 0 (- 1)) |XXX1prime|)
                (+ 0 1)))
        (a!7 (+ (* (+ 0 (- 1)) |XXX0prime|)
                (* (+ 0 1) |XXX1prime|)
                (+ 0 1)))
        (a!8 (> |gh1prime| (+ (* (+ 0 1) |XXX0prime|) (+ 0 1))))
        (a!9 (> |gh1prime|
                (+ (* (+ 0 1) |XXX0prime|)
                   (* (+ 0 1) |XXX1prime|)
                   (+ 0 1)))))
  (let ((a!10 (and (= |gh0prime| (- gh0 (+ 0 1)))
                   (> |gh1prime| |XXX0prime|)
                   (> |gh1prime| |XXX1prime|)
                   a!2
                   a!3
                   (<= gh1 (+ 0 0))
                   (> |gh1prime| (+ 0 1))
                   (> |gh1prime| a!4)
                   (> |gh1prime| a!5)
                   (> |gh1prime| a!6)
                   (> |gh1prime| a!7)
                   a!8
                   a!9)))
  (let ((a!11 (and (starexecinv1 |XXX0| |XXX1| gh0 gh1)
                   (>= (- |XXX0| |XXX1|) (+ 0 1))
                   (= |XXX0prime| (- |XXX0| r))
                   (= |XXX1prime| (+ |XXX1| r1 (+ 0 1)))
                   (or a!1 a!10)
                   true)))
    (=> a!11 (starexecinv1 |XXX0prime| |XXX1prime| |gh0prime| |gh1prime|)))))))
(assert (forall ((|XXX0| Real) (|XXX1| Real) (gh0 Real) (gh1 Real) )
  (=> (and (starexecinv1 |XXX0| |XXX1| gh0 gh1)
           (>= (- |XXX0| |XXX1|) (+ 0 1))
           (< gh0 (+ 0 0))
           true)
      false)))
(check-sat)
