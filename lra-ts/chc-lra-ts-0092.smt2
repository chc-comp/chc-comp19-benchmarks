;; Original file: term_308.smt2
(set-logic HORN)
(declare-fun starexecinv1 (Real Real Real Real) Bool)

(assert (forall ((|XXX0prime| Real)
         (|XXX1prime| Real)
         (|XXX2prime| Real)
         (|gh0prime| Real))
  (let ((a!1 (> |gh0prime| (* (+ 0 (- 1)) |XXX0prime|)))
        (a!2 (> |gh0prime| (* (+ 0 (- 1)) |XXX1prime|)))
        (a!3 (> |gh0prime| (* (+ 0 (- 1)) |XXX2prime|)))
        (a!4 (> |gh0prime| (+ (* (+ 0 1) |XXX0prime|) (+ 0 1))))
        (a!5 (+ (* (+ 0 (- 1)) |XXX2prime|) (+ 0 1)))
        (a!6 (> |gh0prime| (+ (* (+ 0 1) |XXX1prime|) (+ 0 9))))
        (a!7 (> |gh0prime| (+ (* (+ 0 1) |XXX2prime|) (+ 0 1))))
        (a!8 (+ (* (+ 0 1) |XXX0prime|)
                (* (+ 0 (- 1)) |XXX1prime|)
                (* (+ 0 (- 1)) |XXX2prime|)
                (+ 0 9)))
        (a!9 (+ (* (+ 0 (- 1)) |XXX0prime|)
                (* (+ 0 1) |XXX2prime|)
                (+ 0 9)))
        (a!10 (+ (* (+ 0 (- 1)) |XXX0prime|)
                 (* (+ 0 (- 1)) |XXX1prime|)
                 (* (+ 0 (- 1)) |XXX2prime|)
                 (+ 0 9)))
        (a!11 (+ (* (+ 0 1) |XXX0prime|)
                 (* (+ 0 (- 1)) |XXX1prime|)
                 (* (+ 0 1) |XXX2prime|)
                 (+ 0 9))))
  (let ((a!12 (and true
                   (= (+ 0 1) |XXX0prime|)
                   (= |XXX1prime| (+ 0 0))
                   (= |XXX2prime| (+ 0 (- 1)))
                   (> |gh0prime| |XXX0prime|)
                   (> |gh0prime| |XXX1prime|)
                   (> |gh0prime| |XXX2prime|)
                   a!1
                   a!2
                   a!3
                   (> |gh0prime| (+ 0 9))
                   a!4
                   (> |gh0prime| a!5)
                   a!6
                   a!7
                   (> |gh0prime| a!8)
                   (> |gh0prime| a!9)
                   (> |gh0prime| a!10)
                   (> |gh0prime| a!11))))
    (=> a!12 (starexecinv1 |XXX0prime| |XXX1prime| |XXX2prime| |gh0prime|))))))
(assert (forall ((|XXX0| Real)
         (|XXX1| Real)
         (|XXX2| Real)
         (gh0 Real)
         (|XXX0prime| Real)
         (main@%.off0 Real)
         (main@%80 Bool)
         (|XXX1prime| Real)
         (|XXX2prime| Real)
         (|gh0prime| Real))
  (let ((a!1 (>= (+ main@%.off0 (+ 0 (- 1))) (+ 0 0)))
        (a!2 (< (+ main@%.off0 (+ 0 (- 1))) (+ 0 6)))
        (a!3 (= main@%80 (= (+ |XXX1| (+ 0 1)) (+ 0 10))))
        (a!4 (ite main@%80 (+ 0 1) (+ main@%.off0 (+ 0 (- 1)))))
        (a!5 (>= (* (+ 0 (- 1)) |XXX0|) (+ 0 (- 1))))
        (a!6 (> (* (+ 0 (- 1)) |XXX2|) (+ 0 (- 6)))))
  (let ((a!7 (and (starexecinv1 |XXX0| |XXX1| |XXX2| gh0)
                  (= (+ 0 1) |XXX0prime|)
                  (ite a!1 a!2 false)
                  (= (+ 0 1) |XXX0|)
                  a!3
                  (not (= |XXX2| (+ 0 0)))
                  (= |XXX1prime| (+ |XXX1| (+ 0 1)))
                  (= |XXX2prime| a!4)
                  (= |gh0prime| (- gh0 (+ 0 1)))
                  a!5
                  (>= (* (+ 0 1) |XXX0|) (+ 0 1))
                  (>= (* (+ 0 1) |XXX1|) (+ 0 0))
                  (>= (* (+ 0 1) |XXX2|) (+ 0 (- 1)))
                  a!6)))
    (=> a!7 (starexecinv1 |XXX0prime| |XXX1prime| |XXX2prime| |gh0prime|))))))
(assert (forall ((|XXX0| Real)
         (|XXX1| Real)
         (|XXX2| Real)
         (gh0 Real)
         )
  (let ((a!1 (>= (* (+ 0 (- 1)) |XXX0|) (+ 0 (- 1))))
        (a!2 (> (* (+ 0 (- 1)) |XXX2|) (+ 0 (- 6)))))
  (let ((a!3 (and (starexecinv1 |XXX0| |XXX1| |XXX2| gh0)
                  (= (+ 0 1) |XXX0|)
                  (not (= |XXX2| (+ 0 0)))
                  (< gh0 (+ 0 0))
                  a!1
                  (>= (* (+ 0 1) |XXX0|) (+ 0 1))
                  (>= (* (+ 0 1) |XXX1|) (+ 0 0))
                  (>= (* (+ 0 1) |XXX2|) (+ 0 (- 1)))
                  a!2)))
    (=> a!3 false)))))
(check-sat)
