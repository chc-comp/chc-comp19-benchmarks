;; Original file: rec_error.smt2
(set-logic HORN)
(declare-fun P5 (Int Int) Bool)
(declare-fun P4 (Int Int) Bool)
(declare-fun P0 (Int Int Int) Bool)
(declare-fun P1 (Int) Bool)
(declare-fun P2 (Int) Bool)
(declare-fun P3 (Int Int) Bool)
(assert (forall ((x1 Int) (x0 Int)) (=> (P5 x0 x1) (P2 x1))))
(assert (forall ((x3 Int) (x2 Int) (x0 Int) (x1 Int)) (=> (and (P5 x0 x1) (P4 x1 x2) (P2 x3) (<= x2 2)) (P2 x3))))
(assert (forall ((x3 Int) (x4 Int) (x2 Int) (x0 Int) (x1 Int)) (=> (and (P5 x0 x1) (P4 x1 x2) (P2 x3) (P4 x3 x4) (<= x2 2)) (P4 x3 x4))))
(assert (forall ((x2 Int) (x0 Int) (x1 Int)) (=> (and (P4 x2 x0) (P5 x1 x2) (<= x0 2)) (P2 x2))))
(assert (forall ((x0 Int) (x4 Int) (x1 Int) (x2 Int) (x3 Int)) (=> (and (P5 x0 x2) (P4 x2 x1) (P4 x2 x3) (P2 x4) (<= x1 2)) (P5 x0 x4))))
(assert (forall ((x4 Int) (x5 Int) (x0 Int) (x3 Int) (x1 Int) (x2 Int)) (=> (and (P5 x3 x1) (P4 x1 x0) (P4 x1 x2) (P2 x4) (P0 x3 x4 x5) (<= x0 2)) (P4 x4 x5))))
(assert (forall ((x0 Int) (x4 Int) (x2 Int) (x1 Int) (x3 Int)) (=> (and (P5 x1 x3) (P4 x3 x2) (P4 x3 x4) (<= x2 2)) (P5 x0 x4))))
(assert (forall ((x0 Int) (x2 Int) (x5 Int) (x1 Int) (x4 Int) (x3 Int)) (=> (and (P5 x0 x2) (P4 x2 x1) (P4 x2 x4) (P0 x3 x4 x5) (<= x1 2)) (P0 x0 x2 x5))))
(assert (forall ((x1 Int) (x0 Int)) (=> (and (P1 x1) (= x0 (+ 1 x1))) (P3 x1 x0))))
(assert (forall ((x0 Int)) (=> (P2 x0) (P1 x0))))
(assert (forall ((x0 Int) (x1 Int)) (=> (and (P2 x0) (P3 x0 x1)) (P4 x0 x1))))
(assert (forall ((x0 Int) (x1 Int)) (=> (= x1 0) (P5 x0 x1))))
(assert (forall ((x2 Int) (x0 Int) (x1 Int)) (=> (and (P5 x0 x1) (P4 x1 x2) (>= x2 3)) false)))
(check-sat)
