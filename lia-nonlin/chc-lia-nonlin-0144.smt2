;; Original file: phi_4.smt2
(set-logic HORN)
(declare-fun REC_f_ (Int Int Int ) Bool)
(declare-fun REC__f (Int Int Int ) Bool)
(declare-fun REC_f_f (Int Int Int Int Int Int ) Bool)


(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (let ((a!1 (not (>= (+ F (- 1)) 0))))
  (let ((a!2 (and (not (= A (+ B 1)))
                  (= (+ C (- 1)) D)
                  (= (* (- 1) E) (- 1))
                  (REC_f_ D E A)
                  (= (+ F (- 1)) 0)
                  a!1
                  (= G 0)
                  (>= (+ C (- 1)) 0)
                  (not (= C 0))
                  (= C F)
                  (= G B))))
    (=> a!2 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (not (= (+ C (- 1)) 0))) (a!2 (not (>= (+ C (- 1)) 0))))
  (let ((a!3 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (REC__f D E B)
                  (= (+ F (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (= (+ I (- 1)) J)
                  (REC_f_f G H A C J E)
                  a!1
                  a!2
                  (= K 0)
                  (>= (+ F (- 1)) 0)
                  (not (= F 0))
                  (= F C)
                  (= K I))))
    (=> a!3 false)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (let ((a!1 (and (not (= A (+ B 1)))
                  (= (+ C (- 1)) D)
                  (= (* (- 1) E) (- 1))
                  (REC_f_ D E A)
                  (= (+ F (- 1)) 0)
                  (not (= B 0))
                  (= G 0)
                  (>= (+ C (- 1)) 0)
                  (not (= C 0))
                  (= C F)
                  (= G B))))
    (=> a!1 false))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (not (= (+ C (- 1)) 0))))
  (let ((a!2 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (REC__f D E B)
                  (= (+ F (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (= (+ I (- 1)) J)
                  (REC_f_f G H A C J E)
                  a!1
                  (not (= I 0))
                  (= K 0)
                  (>= (+ F (- 1)) 0)
                  (not (= F 0))
                  (= F C)
                  (= K I))))
    (=> a!2 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int))
  (let ((a!1 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (= (* (- 1) E) (- 1))
                  (= (+ F (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (REC_f_f D E A G H B)
                  (= I 0)
                  (>= (+ F (- 1)) 0)
                  (= J 0)
                  (>= (+ C (- 1)) 0)
                  (not (= C 0))
                  (= C F)
                  (= J I))))
    (=> a!1 false))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ H (- 1)) 0))))
  (let ((a!2 (and (not (= A (+ B 1)))
                  (= (+ C (- 1)) D)
                  (REC_f_ D E A)
                  (= (+ F (- 1)) G)
                  (REC_f_ C G E)
                  (= (+ H (- 1)) 0)
                  a!1
                  (not (= F 0))
                  (not (= C 0))
                  (= C H)
                  (= F B))))
    (=> a!2 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (not (= (+ E (- 1)) 0))) (a!2 (not (>= (+ E (- 1)) 0))))
  (let ((a!3 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (= (+ E (- 1)) F)
                  (REC_f_f D G A F H B)
                  (= (+ I (- 1)) J)
                  (= (+ K (- 1)) L)
                  (REC_f_f C J G E L H)
                  a!1
                  a!2
                  (not (= I 0))
                  (not (= C 0))
                  (= C E)
                  (= I K))))
    (=> a!3 false)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (not (= A (+ B 1)))
                  (= (+ C (- 1)) D)
                  (REC_f_ D E A)
                  (= (+ F (- 1)) G)
                  (REC_f_ C G E)
                  (= (+ H (- 1)) 0)
                  (not (= B 0))
                  (not (= F 0))
                  (not (= C 0))
                  (= C H)
                  (= F B))))
    (=> a!1 false))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (not (= (+ E (- 1)) 0))))
  (let ((a!2 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (= (+ E (- 1)) F)
                  (REC_f_f D G A F H B)
                  (= (+ I (- 1)) J)
                  (= (+ K (- 1)) L)
                  (REC_f_f C J G E L H)
                  a!1
                  (not (= K 0))
                  (not (= I 0))
                  (not (= C 0))
                  (= C E)
                  (= I K))))
    (=> a!2 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (REC_f_ D E A)
                  (= (+ F (- 1)) G)
                  (= (+ H (- 1)) I)
                  (= (* (- 1) J) (- 1))
                  (REC_f_f C G E I J B)
                  (= K 0)
                  (>= (+ H (- 1)) 0)
                  (not (= F 0))
                  (not (= C 0))
                  (= C H)
                  (= F K))))
    (=> a!1 false))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ H (- 1)) 0))) (a!2 (not (>= (+ C (- 1)) 0))))
  (let ((a!3 (and (not (= A (+ B 1)))
                  (= (+ C (- 1)) D)
                  (REC_f_ D E A)
                  (= (+ F (- 1)) G)
                  (REC_f_ C G E)
                  (= (+ H (- 1)) 0)
                  a!1
                  a!2
                  (not (= C 0))
                  (= C H)
                  (= F B))))
    (=> a!3 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (not (= (+ E (- 1)) 0)))
        (a!2 (not (>= (+ E (- 1)) 0)))
        (a!3 (not (>= (+ C (- 1)) 0))))
  (let ((a!4 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (= (+ E (- 1)) F)
                  (REC_f_f D G A F H B)
                  (= (+ I (- 1)) J)
                  (= (+ K (- 1)) L)
                  (REC_f_f C J G E L H)
                  a!1
                  a!2
                  a!3
                  (not (= C 0))
                  (= C E)
                  (= I K))))
    (=> a!4 false)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ C (- 1)) 0))))
  (let ((a!2 (and (not (= A (+ B 1)))
                  (= (+ C (- 1)) D)
                  (REC_f_ D E A)
                  (= (+ F (- 1)) G)
                  (REC_f_ C G E)
                  (= (+ H (- 1)) 0)
                  (not (= B 0))
                  a!1
                  (not (= C 0))
                  (= C H)
                  (= F B))))
    (=> a!2 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (not (= (+ E (- 1)) 0))) (a!2 (not (>= (+ C (- 1)) 0))))
  (let ((a!3 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (= (+ E (- 1)) F)
                  (REC_f_f D G A F H B)
                  (= (+ I (- 1)) J)
                  (= (+ K (- 1)) L)
                  (REC_f_f C J G E L H)
                  a!1
                  (not (= K 0))
                  a!2
                  (not (= C 0))
                  (= C E)
                  (= I K))))
    (=> a!3 false)))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (not (>= (+ C (- 1)) 0))))
  (let ((a!2 (and (not (= A B))
                  (= (+ C (- 1)) D)
                  (REC_f_ D E A)
                  (= (+ F (- 1)) G)
                  (= (+ H (- 1)) I)
                  (= (* (- 1) J) (- 1))
                  (REC_f_f C G E I J B)
                  (= K 0)
                  (>= (+ H (- 1)) 0)
                  a!1
                  (not (= C 0))
                  (= C H)
                  (= F K))))
    (=> a!2 false)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (let ((a!1 (and (not (= (+ A 1) B))
                  (= (+ C (- 1)) D)
                  (= (* (- 1) E) (- 1))
                  (REC__f D E B)
                  (= F 0)
                  (>= (+ C (- 1)) 0)
                  (= G 0)
                  (= G C)
                  (= A F))))
    (=> a!1 false))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (= (+ C (- 1)) 0))))
  (let ((a!2 (and (not (= (+ A 1) B))
                  (= (+ C (- 1)) D)
                  (REC__f D E B)
                  (= (+ F (- 1)) G)
                  (REC__f C G E)
                  a!1
                  (not (= F 0))
                  (= H 0)
                  (= H C)
                  (= A F))))
    (=> a!2 false)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (= (+ C (- 1)) 0))) (a!2 (not (>= (+ C (- 1)) 0))))
  (let ((a!3 (and (not (= (+ A 1) B))
                  (= (+ C (- 1)) D)
                  (REC__f D E B)
                  (= (+ F (- 1)) G)
                  (REC__f C G E)
                  a!1
                  a!2
                  (= H 0)
                  (= H C)
                  (= A F))))
    (=> a!3 false)))))
(assert (forall ((B Int) (C Int) (A Int))
  (=> (and (= (+ B 1) C) (= A 0)) (REC_f_ A B C))))
(assert (forall ((A Int) (D Int) (E Int) (C Int) (B Int) (F Int))
  (let ((a!1 (not (>= (+ A (- 1)) 0))))
  (let ((a!2 (and (= (+ A (- 1)) D)
                  (REC_f_ D E C)
                  (= (+ B (- 1)) F)
                  (REC_f_ A F E)
                  a!1
                  (not (= A 0)))))
    (=> a!2 (REC_f_ A B C))))))
(assert (forall ((A Int) (D Int) (E Int) (C Int) (B Int) (F Int))
  (let ((a!1 (and (= (+ A (- 1)) D)
                  (REC_f_ D E C)
                  (= (+ B (- 1)) F)
                  (REC_f_ A F E)
                  (not (= B 0))
                  (not (= A 0)))))
    (=> a!1 (REC_f_ A B C)))))
(assert (forall ((A Int) (D Int) (E Int) (C Int) (B Int))
  (let ((a!1 (and (= (+ A (- 1)) D)
                  (= (* (- 1) E) (- 1))
                  (REC_f_ D E C)
                  (= B 0)
                  (>= (+ A (- 1)) 0)
                  (not (= A 0)))))
    (=> a!1 (REC_f_ A B C)))))
(assert (forall ((B Int) (C Int) (E Int) (F Int) (D Int) (A Int))
  (let ((a!1 (not (>= (+ D (- 1)) 0))))
  (let ((a!2 (and (= (+ B 1) C) (= (+ E 1) F) (= (+ D (- 1)) 0) a!1 (= A 0))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((B Int)
         (C Int)
         (D Int)
         (G Int)
         (H Int)
         (F Int)
         (E Int)
         (I Int)
         (A Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))) (a!2 (not (>= (+ D (- 1)) 0))))
  (let ((a!3 (and (= (+ B 1) C)
                  (= (+ D (- 1)) G)
                  (REC__f G H F)
                  (= (+ E (- 1)) I)
                  (REC__f D I H)
                  a!1
                  a!2
                  (= A 0))))
    (=> a!3 (REC_f_f A B C D E F))))))
(assert (forall ((B Int) (C Int) (E Int) (F Int) (D Int) (A Int))
  (let ((a!1 (and (= (+ B 1) C)
                  (= (+ E 1) F)
                  (= (+ D (- 1)) 0)
                  (not (= E 0))
                  (= A 0))))
    (=> a!1 (REC_f_f A B C D E F)))))
(assert (forall ((B Int)
         (C Int)
         (D Int)
         (G Int)
         (H Int)
         (F Int)
         (E Int)
         (I Int)
         (A Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))))
  (let ((a!2 (and (= (+ B 1) C)
                  (= (+ D (- 1)) G)
                  (REC__f G H F)
                  (= (+ E (- 1)) I)
                  (REC__f D I H)
                  a!1
                  (not (= E 0))
                  (= A 0))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((B Int) (C Int) (D Int) (G Int) (H Int) (F Int) (E Int) (A Int))
  (let ((a!1 (and (= (+ B 1) C)
                  (= (+ D (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (REC__f G H F)
                  (= E 0)
                  (>= (+ D (- 1)) 0)
                  (= A 0))))
    (=> a!1 (REC_f_f A B C D E F)))))
(assert (forall ((A Int)
         (G Int)
         (H Int)
         (C Int)
         (B Int)
         (I Int)
         (D Int)
         (J Int)
         (K Int)
         (F Int)
         (E Int))
  (let ((a!1 (not (>= (+ A (- 1)) 0))))
  (let ((a!2 (and (= (+ A (- 1)) G)
                  (REC_f_ G H C)
                  (= (+ B (- 1)) I)
                  (= (+ D (- 1)) J)
                  (= (* (- 1) K) (- 1))
                  (REC_f_f A I H J K F)
                  (= E 0)
                  (>= (+ D (- 1)) 0)
                  a!1
                  (not (= A 0)))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((A Int)
         (G Int)
         (D Int)
         (H Int)
         (I Int)
         (C Int)
         (J Int)
         (F Int)
         (B Int)
         (K Int)
         (E Int)
         (L Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))) (a!2 (not (>= (+ A (- 1)) 0))))
  (let ((a!3 (and (= (+ A (- 1)) G)
                  (= (+ D (- 1)) H)
                  (REC_f_f G I C H J F)
                  (= (+ B (- 1)) K)
                  (= (+ E (- 1)) L)
                  (REC_f_f A K I D L J)
                  a!1
                  (not (= E 0))
                  a!2
                  (not (= A 0)))))
    (=> a!3 (REC_f_f A B C D E F))))))
(assert (forall ((E Int)
         (F Int)
         (A Int)
         (G Int)
         (H Int)
         (C Int)
         (B Int)
         (I Int)
         (D Int))
  (let ((a!1 (not (>= (+ A (- 1)) 0))))
  (let ((a!2 (and (= (+ E 1) F)
                  (= (+ A (- 1)) G)
                  (REC_f_ G H C)
                  (= (+ B (- 1)) I)
                  (REC_f_ A I H)
                  (= (+ D (- 1)) 0)
                  (not (= E 0))
                  a!1
                  (not (= A 0)))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((A Int)
         (G Int)
         (D Int)
         (H Int)
         (I Int)
         (C Int)
         (J Int)
         (F Int)
         (B Int)
         (K Int)
         (E Int)
         (L Int))
  (let ((a!1 (not (= (+ D (- 1)) 0)))
        (a!2 (not (>= (+ D (- 1)) 0)))
        (a!3 (not (>= (+ A (- 1)) 0))))
  (let ((a!4 (and (= (+ A (- 1)) G)
                  (= (+ D (- 1)) H)
                  (REC_f_f G I C H J F)
                  (= (+ B (- 1)) K)
                  (= (+ E (- 1)) L)
                  (REC_f_f A K I D L J)
                  a!1
                  a!2
                  a!3
                  (not (= A 0)))))
    (=> a!4 (REC_f_f A B C D E F))))))
(assert (forall ((E Int)
         (F Int)
         (A Int)
         (G Int)
         (H Int)
         (C Int)
         (B Int)
         (I Int)
         (D Int))
  (let ((a!1 (not (>= (+ D (- 1)) 0))) (a!2 (not (>= (+ A (- 1)) 0))))
  (let ((a!3 (and (= (+ E 1) F)
                  (= (+ A (- 1)) G)
                  (REC_f_ G H C)
                  (= (+ B (- 1)) I)
                  (REC_f_ A I H)
                  (= (+ D (- 1)) 0)
                  a!1
                  a!2
                  (not (= A 0)))))
    (=> a!3 (REC_f_f A B C D E F))))))
(assert (forall ((A Int)
         (G Int)
         (H Int)
         (C Int)
         (B Int)
         (I Int)
         (D Int)
         (J Int)
         (K Int)
         (F Int)
         (E Int))
  (let ((a!1 (and (= (+ A (- 1)) G)
                  (REC_f_ G H C)
                  (= (+ B (- 1)) I)
                  (= (+ D (- 1)) J)
                  (= (* (- 1) K) (- 1))
                  (REC_f_f A I H J K F)
                  (= E 0)
                  (>= (+ D (- 1)) 0)
                  (not (= B 0))
                  (not (= A 0)))))
    (=> a!1 (REC_f_f A B C D E F)))))
(assert (forall ((A Int)
         (G Int)
         (D Int)
         (H Int)
         (I Int)
         (C Int)
         (J Int)
         (F Int)
         (B Int)
         (K Int)
         (E Int)
         (L Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))))
  (let ((a!2 (and (= (+ A (- 1)) G)
                  (= (+ D (- 1)) H)
                  (REC_f_f G I C H J F)
                  (= (+ B (- 1)) K)
                  (= (+ E (- 1)) L)
                  (REC_f_f A K I D L J)
                  a!1
                  (not (= E 0))
                  (not (= B 0))
                  (not (= A 0)))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((E Int)
         (F Int)
         (A Int)
         (G Int)
         (H Int)
         (C Int)
         (B Int)
         (I Int)
         (D Int))
  (let ((a!1 (and (= (+ E 1) F)
                  (= (+ A (- 1)) G)
                  (REC_f_ G H C)
                  (= (+ B (- 1)) I)
                  (REC_f_ A I H)
                  (= (+ D (- 1)) 0)
                  (not (= E 0))
                  (not (= B 0))
                  (not (= A 0)))))
    (=> a!1 (REC_f_f A B C D E F)))))
(assert (forall ((A Int)
         (G Int)
         (D Int)
         (H Int)
         (I Int)
         (C Int)
         (J Int)
         (F Int)
         (B Int)
         (K Int)
         (E Int)
         (L Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))) (a!2 (not (>= (+ D (- 1)) 0))))
  (let ((a!3 (and (= (+ A (- 1)) G)
                  (= (+ D (- 1)) H)
                  (REC_f_f G I C H J F)
                  (= (+ B (- 1)) K)
                  (= (+ E (- 1)) L)
                  (REC_f_f A K I D L J)
                  a!1
                  a!2
                  (not (= B 0))
                  (not (= A 0)))))
    (=> a!3 (REC_f_f A B C D E F))))))
(assert (forall ((E Int)
         (F Int)
         (A Int)
         (G Int)
         (H Int)
         (C Int)
         (B Int)
         (I Int)
         (D Int))
  (let ((a!1 (not (>= (+ D (- 1)) 0))))
  (let ((a!2 (and (= (+ E 1) F)
                  (= (+ A (- 1)) G)
                  (REC_f_ G H C)
                  (= (+ B (- 1)) I)
                  (REC_f_ A I H)
                  (= (+ D (- 1)) 0)
                  a!1
                  (not (= B 0))
                  (not (= A 0)))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((A Int)
         (G Int)
         (H Int)
         (D Int)
         (I Int)
         (J Int)
         (C Int)
         (F Int)
         (E Int)
         (B Int))
  (let ((a!1 (and (= (+ A (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (= (+ D (- 1)) I)
                  (= (* (- 1) J) (- 1))
                  (REC_f_f G H C I J F)
                  (= E 0)
                  (>= (+ D (- 1)) 0)
                  (= B 0)
                  (>= (+ A (- 1)) 0)
                  (not (= A 0)))))
    (=> a!1 (REC_f_f A B C D E F)))))
(assert (forall ((D Int)
         (G Int)
         (H Int)
         (F Int)
         (A Int)
         (I Int)
         (J Int)
         (E Int)
         (K Int)
         (C Int)
         (B Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))))
  (let ((a!2 (and (= (+ D (- 1)) G)
                  (REC__f G H F)
                  (= (+ A (- 1)) I)
                  (= (* (- 1) J) (- 1))
                  (= (+ E (- 1)) K)
                  (REC_f_f I J C D K H)
                  a!1
                  (not (= E 0))
                  (= B 0)
                  (>= (+ A (- 1)) 0)
                  (not (= A 0)))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((E Int) (F Int) (A Int) (G Int) (H Int) (C Int) (D Int) (B Int))
  (let ((a!1 (and (= (+ E 1) F)
                  (= (+ A (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (REC_f_ G H C)
                  (= (+ D (- 1)) 0)
                  (not (= E 0))
                  (= B 0)
                  (>= (+ A (- 1)) 0)
                  (not (= A 0)))))
    (=> a!1 (REC_f_f A B C D E F)))))
(assert (forall ((D Int)
         (G Int)
         (H Int)
         (F Int)
         (A Int)
         (I Int)
         (J Int)
         (E Int)
         (K Int)
         (C Int)
         (B Int))
  (let ((a!1 (not (= (+ D (- 1)) 0))) (a!2 (not (>= (+ D (- 1)) 0))))
  (let ((a!3 (and (= (+ D (- 1)) G)
                  (REC__f G H F)
                  (= (+ A (- 1)) I)
                  (= (* (- 1) J) (- 1))
                  (= (+ E (- 1)) K)
                  (REC_f_f I J C D K H)
                  a!1
                  a!2
                  (= B 0)
                  (>= (+ A (- 1)) 0)
                  (not (= A 0)))))
    (=> a!3 (REC_f_f A B C D E F))))))
(assert (forall ((E Int) (F Int) (A Int) (G Int) (H Int) (C Int) (D Int) (B Int))
  (let ((a!1 (not (>= (+ D (- 1)) 0))))
  (let ((a!2 (and (= (+ E 1) F)
                  (= (+ A (- 1)) G)
                  (= (* (- 1) H) (- 1))
                  (REC_f_ G H C)
                  (= (+ D (- 1)) 0)
                  a!1
                  (= B 0)
                  (>= (+ A (- 1)) 0)
                  (not (= A 0)))))
    (=> a!2 (REC_f_f A B C D E F))))))
(assert (forall ((A Int) (D Int) (E Int) (C Int) (B Int))
  (let ((a!1 (and (= (+ A (- 1)) D)
                  (= (* (- 1) E) (- 1))
                  (REC__f D E C)
                  (= B 0)
                  (>= (+ A (- 1)) 0))))
    (=> a!1 (REC__f A B C)))))
(assert (forall ((A Int) (D Int) (E Int) (C Int) (B Int) (F Int))
  (let ((a!1 (not (= (+ A (- 1)) 0))))
  (let ((a!2 (and (= (+ A (- 1)) D)
                  (REC__f D E C)
                  (= (+ B (- 1)) F)
                  (REC__f A F E)
                  a!1
                  (not (= B 0)))))
    (=> a!2 (REC__f A B C))))))
(assert (forall ((B Int) (C Int) (A Int))
  (let ((a!1 (and (= (+ B 1) C) (= (+ A (- 1)) 0) (not (= B 0)))))
    (=> a!1 (REC__f A B C)))))
(assert (forall ((A Int) (D Int) (E Int) (C Int) (B Int) (F Int))
  (let ((a!1 (not (= (+ A (- 1)) 0))) (a!2 (not (>= (+ A (- 1)) 0))))
  (let ((a!3 (and (= (+ A (- 1)) D)
                  (REC__f D E C)
                  (= (+ B (- 1)) F)
                  (REC__f A F E)
                  a!1
                  a!2)))
    (=> a!3 (REC__f A B C))))))
(assert (forall ((B Int) (C Int) (A Int))
  (let ((a!1 (not (>= (+ A (- 1)) 0))))
  (let ((a!2 (and (= (+ B 1) C) (= (+ A (- 1)) 0) a!1)))
    (=> a!2 (REC__f A B C))))))
(check-sat)
