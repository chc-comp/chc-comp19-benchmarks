;; Original file: pow_inc.smt2
(set-logic HORN)
(declare-fun P4 (Int Int Int) Bool)
(declare-fun P3 (Int Int Int) Bool)
(declare-fun P1 (Int Int) Bool)
(declare-fun P9 (Int Int) Bool)
(declare-fun P0 (Int) Bool)
(declare-fun P2 (Int Int) Bool)
(declare-fun P10 (Int Int) Bool)
(declare-fun P11 (Int Int Int) Bool)
(declare-fun P5 (Int Int Int Int) Bool)
(declare-fun P6 (Int) Bool)
(declare-fun P7 (Int) Bool)
(declare-fun P8 (Int Int) Bool)
(declare-fun P12 (Int Int Int Int) Bool)
(assert (forall ((x0 Int) (x2 Int) (x1 Int)) (=> (P4 x0 x1 x2) (P2 x0 x2))))
(assert (forall ((x3 Int) (x1 Int) (x0 Int) (x2 Int)) (=> (and (P4 x1 x0 x2) (P3 x1 x2 x3)) (P0 x3))))
(assert (forall ((x1 Int) (x0 Int) (x2 Int) (x4 Int) (x3 Int)) (=> (and (P4 x1 x0 x2) (P3 x1 x2 x3) (P1 x3 x4)) (P5 x1 x0 x2 x4))))
(assert (forall ((x2 Int) (x1 Int) (x0 Int)) (=> (and (P10 x0 x1) (P11 x0 x1 x2) (<= x1 0)) (P7 x2))))
(assert (forall ((x0 Int) (x1 Int) (x2 Int) (x3 Int)) (=> (and (P10 x0 x1) (P11 x0 x1 x2) (P9 x2 x3) (<= x1 0)) (P12 x0 x1 x2 x3))))
(assert (forall ((x3 Int) (x2 Int) (x0 Int) (x1 Int)) (=> (and (P10 x1 x2) (P7 x3) (>= x2 1) (= x2 (+ 1 x0))) (P7 x3))))
(assert (forall ((x3 Int) (x4 Int) (x2 Int) (x0 Int) (x1 Int)) (=> (and (P10 x1 x2) (P7 x3) (P9 x3 x4) (>= x2 1) (= x2 (+ 1 x0))) (P9 x3 x4))))
(assert (forall ((x1 Int) (x0 Int) (x2 Int)) (=> (and (P10 x1 x2) (>= x2 1) (= x2 (+ 1 x0))) (P10 x1 x0))))
(assert (forall ((x1 Int) (x0 Int) (x3 Int) (x2 Int)) (=> (and (P10 x1 x2) (P0 x3) (>= x2 1) (= x2 (+ 1 x0))) (P11 x1 x0 x3))))
(assert (forall ((x3 Int) (x4 Int) (x0 Int) (x2 Int) (x1 Int)) (=> (and (P10 x1 x0) (P0 x3) (P12 x1 x2 x3 x4) (>= x0 1) (= x0 (+ 1 x2))) (P1 x3 x4))))
(assert (forall ((x1 Int) (x0 Int) (x4 Int) (x2 Int) (x3 Int)) (=> (and (P10 x1 x2) (P2 x3 x4) (>= x2 1) (= x2 (+ 1 x0))) (P11 x1 x0 x4))))
(assert (forall ((x1 Int) (x4 Int) (x5 Int) (x0 Int) (x3 Int) (x2 Int)) (=> (and (P10 x2 x0) (P2 x1 x4) (P12 x2 x3 x4 x5) (>= x0 1) (= x0 (+ 1 x3))) (P3 x1 x4 x5))))
(assert (forall ((x0 Int) (x1 Int) (x5 Int) (x4 Int) (x2 Int) (x3 Int)) (=> (and (P10 x3 x4) (P11 x3 x4 x5) (>= x4 1) (= x4 (+ 1 x2))) (P4 x0 x1 x5))))
(assert (forall ((x1 Int) (x2 Int) (x5 Int) (x6 Int) (x0 Int) (x3 Int) (x4 Int)) (=> (and (P10 x1 x2) (P11 x1 x2 x5) (P5 x3 x4 x5 x6) (>= x2 1) (= x2 (+ 1 x0))) (P12 x1 x2 x5 x6))))
(assert (forall ((x1 Int) (x0 Int)) (=> (and (P6 x1) (= x0 (+ 1 x1))) (P8 x1 x0))))
(assert (forall ((x0 Int)) (=> (P7 x0) (P6 x0))))
(assert (forall ((x0 Int) (x1 Int)) (=> (and (P7 x0) (P8 x0 x1)) (P9 x0 x1))))
(assert (forall ((x0 Int) (x1 Int)) (=> true (P10 x0 x1))))
(assert (forall ((x0 Int) (x1 Int) (x2 Int)) (=> true (P11 x0 x1 x2))))
(assert (forall ((x3 Int) (x2 Int) (x0 Int) (x1 Int)) (=> (and (P12 x0 x1 x2 x3) (<= (+ 1 x3) x2)) false)))
(check-sat)
