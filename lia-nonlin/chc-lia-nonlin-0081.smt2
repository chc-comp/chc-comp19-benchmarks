;; Original file: bcopy3.smt2
(set-logic HORN)
(declare-fun P1 (Int Int Int Int Int) Bool)
(declare-fun P7 (Int) Bool)
(declare-fun P11 (Int Int) Bool)
(declare-fun P5 (Int Int Int) Bool)
(declare-fun P0 (Int Int Int Int) Bool)
(declare-fun P4 (Int Int) Bool)
(declare-fun P3 (Int Int) Bool)
(declare-fun P2 (Int) Bool)
(declare-fun P14 (Int Int Int Int) Bool)
(declare-fun P15 (Int Int Int Int) Bool)
(declare-fun P10 (Int Int Int) Bool)
(declare-fun P8 (Int) Bool)
(declare-fun P6 (Int Int Int Int Int) Bool)
(declare-fun P9 (Int Int) Bool)
(declare-fun P12 (Int Int Int) Bool)
(declare-fun P13 (Int Int Int) Bool)
(assert (forall ((x1 Int) (x2 Int) (x0 Int)) (=> (and (P7 x1) (P11 x1 x2) (<= 0 x2) (<= (+ 1 x2) x1) (= x0 0)) (P13 x1 x2 x0))))
(assert (forall ((x2 Int) (x3 Int) (x0 Int) (x1 Int) (x4 Int)) (=> (and (P4 x2 x3) (P5 x2 x3 x0) (P0 x2 x3 x0 x1) (P5 x2 x3 x4) (= x3 x1) (= x4 x0)) (P1 x2 x3 x0 x1 x4))))
(assert (forall ((x3 Int) (x1 Int) (x2 Int) (x0 Int)) (=> (and (P5 x2 x3 x0) (P0 x2 x3 x0 x1) (P4 x2 x3) (or (< x3 x1) (> x3 x1))) (P2 x3))))
(assert (forall ((x2 Int) (x3 Int) (x0 Int) (x1 Int) (x4 Int)) (=> (and (P5 x2 x3 x0) (P0 x2 x3 x0 x1) (P4 x2 x3) (P3 x3 x4) (or (< x3 x1) (> x3 x1))) (P1 x2 x3 x0 x1 x4))))
(assert (forall ((x1 Int) (x2 Int) (x3 Int) (x4 Int) (x0 Int)) (=> (and (P8 x1) (P15 x1 x2 x3 x4) (>= x4 x1)) (P6 x1 x2 x3 x4 x0))))
(assert (forall ((x0 Int) (x3 Int) (x1 Int) (x2 Int)) (=> (and (P8 x0) (P15 x0 x1 x2 x3) (<= (+ 1 x3) x0)) (P9 x0 x3))))
(assert (forall ((x2 Int) (x0 Int) (x5 Int) (x3 Int) (x1 Int) (x4 Int)) (=> (and (P8 x2) (P15 x2 x0 x1 x3) (P10 x2 x3 x4) (P2 x5) (<= (+ 1 x3) x2)) (P12 x2 x0 x5))))
(assert (forall ((x5 Int) (x6 Int) (x1 Int) (x3 Int) (x4 Int) (x0 Int) (x2 Int)) (=> (and (P8 x3) (P15 x3 x4 x0 x1) (P10 x3 x1 x2) (P2 x5) (P14 x3 x4 x5 x6) (<= (+ 1 x1) x3)) (P3 x5 x6))))
(assert (forall ((x3 Int) (x4 Int) (x1 Int) (x0 Int) (x2 Int)) (=> (and (P8 x1) (P10 x1 x4 x0) (P15 x1 x2 x3 x4) (<= (+ 1 x4) x1)) (P4 x3 x4))))
(assert (forall ((x1 Int) (x3 Int) (x4 Int) (x2 Int) (x0 Int)) (=> (and (P8 x2) (P15 x2 x0 x1 x3) (P10 x2 x3 x4) (<= (+ 1 x3) x2)) (P5 x1 x3 x4))))
(assert (forall ((x5 Int) (x3 Int) (x0 Int) (x1 Int) (x2 Int) (x4 Int)) (=> (and (P15 x5 x1 x2 x3) (P10 x5 x3 x4) (P8 x5) (<= (+ 1 x3) x5) (= x0 (+ 1 x3))) (P8 x5))))
(assert (forall ((x5 Int) (x6 Int) (x3 Int) (x0 Int) (x1 Int) (x2 Int) (x4 Int)) (=> (and (P15 x5 x1 x2 x3) (P10 x5 x3 x4) (P8 x5) (P9 x5 x6) (<= (+ 1 x3) x5) (= x0 (+ 1 x3))) (P9 x5 x6))))
(assert (forall ((x5 Int) (x6 Int) (x7 Int) (x3 Int) (x0 Int) (x1 Int) (x2 Int) (x4 Int)) (=> (and (P15 x5 x1 x2 x3) (P10 x5 x3 x4) (P8 x5) (P9 x5 x6) (P10 x5 x6 x7) (<= (+ 1 x3) x5) (= x0 (+ 1 x3))) (P10 x5 x6 x7))))
(assert (forall ((x5 Int) (x1 Int) (x7 Int) (x3 Int) (x0 Int) (x2 Int) (x4 Int) (x6 Int)) (=> (and (P15 x5 x1 x2 x3) (P10 x5 x3 x4) (P8 x5) (P12 x5 x6 x7) (<= (+ 1 x3) x5) (= x0 (+ 1 x3))) (P12 x5 x1 x7))))
(assert (forall ((x5 Int) (x4 Int) (x7 Int) (x8 Int) (x2 Int) (x0 Int) (x6 Int) (x1 Int) (x3 Int)) (=> (and (P15 x5 x6 x1 x2) (P10 x5 x2 x3) (P8 x5) (P12 x5 x4 x7) (P14 x5 x6 x7 x8) (<= (+ 1 x2) x5) (= x0 (+ 1 x2))) (P14 x5 x4 x7 x8))))
(assert (forall ((x7 Int) (x0 Int) (x1 Int) (x2 Int) (x5 Int) (x3 Int) (x4 Int) (x6 Int)) (=> (and (P15 x7 x3 x4 x5) (P10 x7 x5 x6) (P8 x7) (<= (+ 1 x5) x7) (= x2 (+ 1 x5))) (P15 x7 x0 x1 x2))))
(assert (forall ((x4 Int) (x0 Int) (x1 Int) (x2 Int) (x8 Int) (x7 Int) (x3 Int) (x5 Int) (x6 Int)) (=> (and (P15 x4 x0 x1 x2) (P10 x4 x2 x3) (P8 x4) (P6 x4 x5 x6 x7 x8) (<= (+ 1 x2) x4) (= x7 (+ 1 x2))) (P6 x4 x0 x1 x2 x8))))
(assert (forall ((x0 Int)) (=> true (P7 x0))))
(assert (forall ((x0 Int)) (=> true (P7 x0))))
(assert (forall ((x0 Int) (x1 Int)) (=> (<= x0 x1) (P8 x0))))
(assert (forall ((x1 Int) (x2 Int) (x0 Int)) (=> (and (P9 x1 x2) (<= x1 x0)) (P11 x1 x2))))
(assert (forall ((x1 Int) (x2 Int) (x3 Int) (x0 Int)) (=> (and (P9 x1 x2) (P13 x1 x2 x3) (<= x1 x0)) (P10 x1 x2 x3))))
(assert (forall ((x0 Int) (x3 Int) (x1 Int) (x2 Int)) (=> (and (P12 x1 x2 x3) (<= x1 x0)) (P11 x0 x3))))
(assert (forall ((x0 Int) (x1 Int) (x3 Int) (x4 Int) (x2 Int)) (=> (and (P12 x0 x1 x3) (P13 x2 x3 x4) (<= x0 x2)) (P14 x0 x1 x3 x4))))
(assert (forall ((x2 Int) (x0 Int) (x1 Int) (x4 Int) (x3 Int)) (=> (and (<= x2 x3) (= x4 0)) (P15 x2 x0 x1 x4))))
(assert (forall ((x0 Int) (x1 Int) (x3 Int) (x2 Int)) (=> (and (P7 x2) (P11 x2 x3) (or (not (> x0 0)) (not (> x1 0))) (or (and (> x0 0) (<= 0 x3)) (and (not (> x0 0)) (not (<= 0 x3)))) (or (and (> x1 0) (< x3 x2)) (and (not (> x1 0)) (not (< x3 x2))))) false)))
(check-sat)
