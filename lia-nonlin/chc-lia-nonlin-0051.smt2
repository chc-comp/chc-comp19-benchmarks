;; Original file: adr_122.smt2
(set-logic HORN)
(declare-fun |mc91$unknown:2| (Int Int) Bool)


(assert (forall ((|$knormal:2| Int)
         (|$alpha-1:x| Int)
         (|$knormal:1| Int)
         (|$V-reftype:10| Int)
         (|$knormal:5| Int)
         (|$knormal:3| Int))
  (let ((a!1 (and (= |$knormal:2| (+ |$alpha-1:x| 11))
                  (= (not (= 0 |$knormal:1|)) (> |$alpha-1:x| 100))
                  (= |$V-reftype:10| |$knormal:5|)
                  (not (not (= 0 |$knormal:1|)))
                  (|mc91$unknown:2| |$knormal:5| |$knormal:3|)
                  (|mc91$unknown:2| |$knormal:3| |$knormal:2|)
                  true)))
    (=> a!1 (|mc91$unknown:2| |$V-reftype:10| |$alpha-1:x|)))))
(assert (forall ((|$knormal:2| Int)
         (|$alpha-1:x| Int)
         (|$knormal:1| Int)
         (|$knormal:3| Int))
  (let ((a!1 (and (= |$knormal:2| (+ |$alpha-1:x| 11))
                  (= (not (= 0 |$knormal:1|)) (> |$alpha-1:x| 100))
                  (not (not (= 0 |$knormal:1|)))
                  (|mc91$unknown:2| |$knormal:3| |$knormal:2|)
                  true
                  (not true))))
    (=> a!1 true))))
(assert (forall ((|$knormal:1| Int) (|$alpha-1:x| Int) (|$V-reftype:8| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:1|)) (> |$alpha-1:x| 100))
                  (= |$V-reftype:8| (- |$alpha-1:x| 10))
                  (not (= 0 |$knormal:1|))
                  true)))
    (=> a!1 (|mc91$unknown:2| |$V-reftype:8| |$alpha-1:x|)))))
(assert (forall ((|$knormal:9| Int)
         (|$knormal:7| Int)
         (|$knormal:6| Int)
         (|$alpha-2:n| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:9|)) (= |$knormal:7| 91))
                  (= (not (= 0 |$knormal:6|)) (<= |$alpha-2:n| 101))
                  (not (not (= 0 |$knormal:9|)))
                  (not (= 0 |$knormal:6|))
                  (|mc91$unknown:2| |$knormal:7| |$alpha-2:n|))))
    (=> a!1 false))))
(check-sat)
