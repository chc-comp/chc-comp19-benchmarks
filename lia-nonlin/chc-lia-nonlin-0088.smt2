;; Original file: adr_74.smt2
(set-logic HORN)
(declare-fun |append$unknown:3| (Int Int Int) Bool)
(declare-fun |rev$unknown:5| (Int Int) Bool)


(assert (forall ((|$knormal:2| Int)
         (|$alpha-1:x| Int)
         (|$knormal:1| Int)
         (|$V-reftype:17| Int)
         (|$knormal:5| Int)
         (|$alpha-2:y| Int))
  (let ((a!1 (and (= |$knormal:2| (- |$alpha-1:x| 1))
                  (= (not (= 0 |$knormal:1|)) (= |$alpha-1:x| 0))
                  (= |$V-reftype:17| (+ 1 |$knormal:5|))
                  (not (not (= 0 |$knormal:1|)))
                  (|append$unknown:3|
                    |$knormal:5|
                    |$alpha-2:y|
                    |$knormal:2|)
                  true
                  true)))
    (=> a!1
        (|append$unknown:3|
          |$V-reftype:17|
          |$alpha-2:y|
          |$alpha-1:x|)))))
(assert (forall ((|$knormal:1| Int)
         (|$alpha-1:x| Int)
         (|$V-reftype:15| Int)
         (|$alpha-2:y| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:1|)) (= |$alpha-1:x| 0))
                  (= |$V-reftype:15| |$alpha-2:y|)
                  (not (= 0 |$knormal:1|))
                  true
                  true)))
    (=> a!1
        (|append$unknown:3|
          |$V-reftype:15|
          |$alpha-2:y|
          |$alpha-1:x|)))))
(assert (forall ((|$knormal:8| Int)
         (|$alpha-3:n| Int)
         (|$knormal:7| Int)
         (|$knormal:12| Int)
         (|$V-reftype:22| Int)
         (|$knormal:14| Int)
         (|$knormal:9| Int))
  (let ((a!1 (and (= |$knormal:8| (- |$alpha-3:n| 1))
                  (= (not (= 0 |$knormal:7|)) (= |$alpha-3:n| 0))
                  (= |$knormal:12| 1)
                  (= |$V-reftype:22| |$knormal:14|)
                  (not (not (= 0 |$knormal:7|)))
                  (|rev$unknown:5| |$knormal:9| |$knormal:8|)
                  true
                  (|append$unknown:3|
                    |$knormal:14|
                    |$knormal:12|
                    |$knormal:9|))))
    (=> a!1 (|rev$unknown:5| |$V-reftype:22| |$alpha-3:n|)))))
(assert (forall ((|$knormal:23| Int)
         (|$knormal:21| Int)
         (|$alpha-4:n| Int)
         (|$knormal:20| Int)
         (|$knormal:17| Int)
         (|$knormal:19| Int)
         (|$alpha-5:m| Int)
         (|$alpha-6:$$tmp::1| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:23|))
                     (= |$knormal:21| |$alpha-4:n|))
                  (= (not (= 0 |$knormal:20|))
                     (= |$knormal:17| |$knormal:19|))
                  (= |$knormal:19| (+ |$alpha-4:n| |$alpha-5:m|))
                  (= |$alpha-6:$$tmp::1| 1)
                  (not (not (= 0 |$knormal:20|)))
                  (not (= 0 |$knormal:23|))
                  (|rev$unknown:5| |$knormal:21| |$alpha-4:n|)
                  (|append$unknown:3|
                    |$knormal:17|
                    |$alpha-5:m|
                    |$alpha-4:n|))))
    (=> a!1 false))))
(assert (forall ((|$knormal:8| Int)
         (|$alpha-3:n| Int)
         (|$knormal:7| Int)
         (|$knormal:12| Int)
         (|$knormal:9| Int))
  (let ((a!1 (and (= |$knormal:8| (- |$alpha-3:n| 1))
                  (= (not (= 0 |$knormal:7|)) (= |$alpha-3:n| 0))
                  (= |$knormal:12| 1)
                  (not (not (= 0 |$knormal:7|)))
                  (|rev$unknown:5| |$knormal:9| |$knormal:8|)
                  true
                  (not true))))
    (=> a!1 true))))
(assert (forall ((|$knormal:8| Int)
         (|$alpha-3:n| Int)
         (|$knormal:7| Int)
         (|$knormal:12| Int)
         (|$knormal:9| Int))
  (let ((a!1 (and (= |$knormal:8| (- |$alpha-3:n| 1))
                  (= (not (= 0 |$knormal:7|)) (= |$alpha-3:n| 0))
                  (= |$knormal:12| 1)
                  (not (not (= 0 |$knormal:7|)))
                  (|rev$unknown:5| |$knormal:9| |$knormal:8|)
                  true
                  (not true))))
    (=> a!1 true))))
(assert (forall ((|$knormal:7| Int)
         (|$alpha-3:n| Int)
         (|$V-reftype:19| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:7|)) (= |$alpha-3:n| 0))
                  (= |$V-reftype:19| 0)
                  (not (= 0 |$knormal:7|))
                  true)))
    (=> a!1 (|rev$unknown:5| |$V-reftype:19| |$alpha-3:n|)))))
(assert (forall ((|$knormal:23| Int)
         (|$knormal:21| Int)
         (|$alpha-4:n| Int)
         (|$alpha-6:$$tmp::1| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:23|))
                     (= |$knormal:21| |$alpha-4:n|))
                  (= |$alpha-6:$$tmp::1| 1)
                  (not (= 0 |$knormal:23|))
                  (|rev$unknown:5| |$knormal:21| |$alpha-4:n|)
                  (not true))))
    (=> a!1 true))))
(assert (forall ((|$knormal:23| Int)
         (|$knormal:21| Int)
         (|$alpha-4:n| Int)
         (|$alpha-6:$$tmp::1| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:23|))
                     (= |$knormal:21| |$alpha-4:n|))
                  (= |$alpha-6:$$tmp::1| 1)
                  (not (= 0 |$knormal:23|))
                  (|rev$unknown:5| |$knormal:21| |$alpha-4:n|)
                  (not true))))
    (=> a!1 true))))
(assert (forall ((|$knormal:23| Int) (|$knormal:21| Int) (|$alpha-4:n| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:23|))
                     (= |$knormal:21| |$alpha-4:n|))
                  (not (not (= 0 |$knormal:23|)))
                  (|rev$unknown:5| |$knormal:21| |$alpha-4:n|))))
    (=> a!1 false))))
(check-sat)
