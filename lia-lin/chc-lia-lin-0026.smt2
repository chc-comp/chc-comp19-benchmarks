;; Original file: adr_110.smt2
(set-logic HORN)
(declare-fun |f$unknown:2| (Int Int) Bool)


(assert (forall ((|$knormal:5| Int)
         (|$knormal:4| Int)
         (|$alpha-1:x| Int)
         (|$knormal:3| Int)
         (|$knormal:2| Int)
         (|$knormal:1| Int)
         (|$V-reftype:16| Int)
         (|$knormal:6| Int))
  (let ((a!1 (and (= |$knormal:5| (- |$knormal:4| 1))
                  (= |$knormal:4| (* 2 |$alpha-1:x|))
                  (= (not (= 0 |$knormal:3|)) (<= |$alpha-1:x| 2))
                  (= (not (= 0 |$knormal:2|)) (< |$alpha-1:x| 2))
                  (= (not (= 0 |$knormal:1|)) (< |$alpha-1:x| (- 2)))
                  (= |$V-reftype:16| |$knormal:6|)
                  (not (not (= 0 |$knormal:2|)))
                  (not (not (= 0 |$knormal:1|)))
                  (not (= 0 |$knormal:3|))
                  (|f$unknown:2| |$knormal:6| |$knormal:5|)
                  true)))
    (=> a!1 (|f$unknown:2| |$V-reftype:16| |$alpha-1:x|)))))
(assert (forall ((|$knormal:8| Int)
         (|$knormal:1| Int)
         (|$alpha-1:x| Int)
         (|$V-reftype:9| Int)
         (|$knormal:9| Int))
  (let ((a!1 (and (= |$knormal:8| (- 3))
                  (= (not (= 0 |$knormal:1|)) (< |$alpha-1:x| (- 2)))
                  (= |$V-reftype:9| |$knormal:9|)
                  (not (= 0 |$knormal:1|))
                  (|f$unknown:2| |$knormal:9| |$knormal:8|)
                  true)))
    (=> a!1 (|f$unknown:2| |$V-reftype:9| |$alpha-1:x|)))))
(assert (forall ((|$knormal:7| Int)
         (|$alpha-1:x| Int)
         (|$knormal:2| Int)
         (|$knormal:1| Int)
         (|$V-reftype:12| Int))
  (let ((a!1 (and (= |$knormal:7| (* 2 |$alpha-1:x|))
                  (= (not (= 0 |$knormal:2|)) (< |$alpha-1:x| 2))
                  (= (not (= 0 |$knormal:1|)) (< |$alpha-1:x| (- 2)))
                  (= |$V-reftype:12| (- |$knormal:7| 1))
                  (not (not (= 0 |$knormal:1|)))
                  (not (= 0 |$knormal:2|))
                  true)))
    (=> a!1 (|f$unknown:2| |$V-reftype:12| |$alpha-1:x|)))))
(assert (forall ((|$knormal:3| Int)
         (|$alpha-1:x| Int)
         (|$knormal:2| Int)
         (|$knormal:1| Int)
         (|$V-reftype:17| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:3|)) (<= |$alpha-1:x| 2))
                  (= (not (= 0 |$knormal:2|)) (< |$alpha-1:x| 2))
                  (= (not (= 0 |$knormal:1|)) (< |$alpha-1:x| (- 2)))
                  (= |$V-reftype:17| |$alpha-1:x|)
                  (not (not (= 0 |$knormal:3|)))
                  (not (not (= 0 |$knormal:2|)))
                  (not (not (= 0 |$knormal:1|)))
                  true)))
    (=> a!1 (|f$unknown:2| |$V-reftype:17| |$alpha-1:x|)))))
(assert (forall ((|$knormal:13| Int)
         (|$knormal:11| Int)
         (|$knormal:10| Int))
  (let ((a!1 (and (= (not (= 0 |$knormal:13|)) (>= |$knormal:11| 0))
                  (= |$knormal:10| 3)
                  (not (not (= 0 |$knormal:13|)))
                  (|f$unknown:2| |$knormal:11| |$knormal:10|))))
    (=> a!1 false))))
(check-sat)
