;; Original file: phi_49.smt2
(set-logic HORN)
(declare-fun INV3 (Int Int Int Int Int Int Int Int ) Bool)
(declare-fun INV4 (Int Int Int Int Int Int Int Int ) Bool)
(declare-fun INV1 (Int Int Int Int Int Int Int Int ) Bool)
(declare-fun INV2 (Int Int Int Int Int Int Int Int ) Bool)


(assert (forall ((I Int)
         (E Int)
         (J Int)
         (F Int)
         (A Int)
         (B Int)
         (D Int)
         (C Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- 1 G) (- 1)) 0))))
  (let ((a!2 (and (= (+ I 1) E)
                  (= (+ J 2) F)
                  (not (>= A B))
                  (>= (+ (- D I) (- 1)) 0)
                  (INV3 A B C D I J G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  a!1
                  (= G H))))
    (=> a!2 (INV3 A B C D E F G H))))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (K Int)
         (E Int)
         (L Int)
         (F Int)
         (A Int)
         (D Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- 1 G) (- 1)) 0))))
  (let ((a!2 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (= (+ K 1) E)
                  (= (+ L 2) F)
                  (>= A I)
                  (>= (+ (- D K) (- 1)) 0)
                  (INV3 A I J D K L G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  a!1
                  (= G H))))
    (=> a!2 (INV3 A B C D E F G H))))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (A Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- D E) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 G) (- 1)) 0))))
  (let ((a!3 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (>= A I)
                  a!1
                  (INV3 A I J D E F G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  a!2
                  (= G H))))
    (=> a!3 (INV3 A B C D E F G H))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ (- E F) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 G) (- 1)) 0))))
  (let ((a!3 (and (not (= A B))
                  (not (>= C D))
                  a!1
                  (INV3 C D A E F B G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  a!2
                  (= G H))))
    (=> a!3 false)))))
(assert (forall ((B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (A Int))
  (let ((a!1 (not (>= (+ (- 1 A) (- 1)) 0))))
  (let ((a!2 (and (= (* (- 1) B) (- 1))
                  (= (* (- 1) C) 0)
                  (= (* (- 1) D) (- 1))
                  (= (* (- 1) E) (- 1))
                  (= (* (- 1) F) (- 2))
                  (>= (+ (- 1 G) (- 1)) 0)
                  a!1
                  (= A G))))
    (=> a!2 (INV3 A B C D E F A G))))))
(assert (forall ((I Int)
         (E Int)
         (J Int)
         (F Int)
         (A Int)
         (B Int)
         (D Int)
         (C Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- 1 H) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 G) (- 1)) 0))))
  (let ((a!3 (and (= (+ I 1) E)
                  (= (+ J 2) F)
                  (not (>= A B))
                  (>= (+ (- D I) (- 1)) 0)
                  (INV4 A B C D I J G H)
                  a!1
                  a!2
                  (= G H))))
    (=> a!3 (INV4 A B C D E F G H))))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (K Int)
         (E Int)
         (L Int)
         (F Int)
         (A Int)
         (D Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- 1 H) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 G) (- 1)) 0))))
  (let ((a!3 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (= (+ K 1) E)
                  (= (+ L 2) F)
                  (>= A I)
                  (>= (+ (- D K) (- 1)) 0)
                  (INV4 A I J D K L G H)
                  a!1
                  a!2
                  (= G H))))
    (=> a!3 (INV4 A B C D E F G H))))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (A Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- D E) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 H) (- 1)) 0)))
        (a!3 (not (>= (+ (- 1 G) (- 1)) 0))))
    (=> (and (= (+ I 1) B)
             (= (+ J 2) C)
             (>= A I)
             a!1
             (INV4 A I J D E F G H)
             a!2
             a!3
             (= G H))
        (INV4 A B C D E F G H)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ (- E F) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 H) (- 1)) 0)))
        (a!3 (not (>= (+ (- 1 G) (- 1)) 0))))
    (=> (and (not (= A B))
             (not (>= C D))
             a!1
             (INV4 C D A E F B G H)
             a!2
             a!3
             (= G H))
        false))))
(assert (forall ((B Int) (C Int) (E Int) (F Int) (D Int) (A Int))
  (let ((a!1 (not (>= (+ (- 1 D) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 A) (- 1)) 0))))
  (let ((a!3 (and (= (* (- 1) B) (- 1))
                  (= (* (- 1) C) 0)
                  (= (* (- 1) E) (- 1))
                  (= (* (- 1) F) (- 2))
                  a!1
                  a!2
                  (= A D))))
    (=> a!3 (INV4 A B C D E F A D))))))
(assert (forall ((I Int)
         (E Int)
         (J Int)
         (F Int)
         (A Int)
         (B Int)
         (D Int)
         (C Int)
         (G Int)
         (H Int))
  (let ((a!1 (and (= (+ I 1) E)
                  (= (+ J 2) F)
                  (not (>= A B))
                  (>= (+ (- D I) (- 1)) 0)
                  (INV1 A B C D I J G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!1 (INV1 A B C D E F G H)))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (K Int)
         (E Int)
         (L Int)
         (F Int)
         (A Int)
         (D Int)
         (G Int)
         (H Int))
  (let ((a!1 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (= (+ K 1) E)
                  (= (+ L 2) F)
                  (>= A I)
                  (>= (+ (- D K) (- 1)) 0)
                  (INV1 A I J D K L G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!1 (INV1 A B C D E F G H)))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (A Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- D E) (- 1)) 0))))
  (let ((a!2 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (>= A I)
                  a!1
                  (INV1 A I J D E F G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!2 (INV1 A B C D E F G H))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ (- E F) (- 1)) 0))))
  (let ((a!2 (and (not (= A B))
                  (not (>= C D))
                  a!1
                  (INV1 C D A E F B G H)
                  (>= (+ (- 1 H) (- 1)) 0)
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!2 false)))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (H Int) (G Int))
  (let ((a!1 (and (= (* (- 1) A) (- 1))
                  (= (* (- 1) B) (- 1))
                  (= (* (- 1) C) 0)
                  (= (* (- 1) D) (- 1))
                  (= (* (- 1) E) (- 1))
                  (= (* (- 1) F) (- 2))
                  (>= (+ (- 1 H) (- 1)) 0)
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!1 (INV1 A B C D E F G H)))))
(assert (forall ((I Int)
         (E Int)
         (J Int)
         (F Int)
         (A Int)
         (B Int)
         (D Int)
         (C Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- 1 H) (- 1)) 0))))
  (let ((a!2 (and (= (+ I 1) E)
                  (= (+ J 2) F)
                  (not (>= A B))
                  (>= (+ (- D I) (- 1)) 0)
                  (INV2 A B C D I J G H)
                  a!1
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!2 (INV2 A B C D E F G H))))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (K Int)
         (E Int)
         (L Int)
         (F Int)
         (A Int)
         (D Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- 1 H) (- 1)) 0))))
  (let ((a!2 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (= (+ K 1) E)
                  (= (+ L 2) F)
                  (>= A I)
                  (>= (+ (- D K) (- 1)) 0)
                  (INV2 A I J D K L G H)
                  a!1
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!2 (INV2 A B C D E F G H))))))
(assert (forall ((I Int)
         (B Int)
         (J Int)
         (C Int)
         (A Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int))
  (let ((a!1 (not (>= (+ (- D E) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 H) (- 1)) 0))))
  (let ((a!3 (and (= (+ I 1) B)
                  (= (+ J 2) C)
                  (>= A I)
                  a!1
                  (INV2 A I J D E F G H)
                  a!2
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!3 (INV2 A B C D E F G H))))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (not (>= (+ (- E F) (- 1)) 0)))
        (a!2 (not (>= (+ (- 1 H) (- 1)) 0))))
  (let ((a!3 (and (not (= A B))
                  (not (>= C D))
                  a!1
                  (INV2 C D A E F B G H)
                  a!2
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G H))))
    (=> a!3 false)))))
(assert (forall ((A Int) (B Int) (C Int) (E Int) (F Int) (D Int) (G Int))
  (let ((a!1 (not (>= (+ (- 1 D) (- 1)) 0))))
  (let ((a!2 (and (= (* (- 1) A) (- 1))
                  (= (* (- 1) B) (- 1))
                  (= (* (- 1) C) 0)
                  (= (* (- 1) E) (- 1))
                  (= (* (- 1) F) (- 2))
                  a!1
                  (>= (+ (- 1 G) (- 1)) 0)
                  (= G D))))
    (=> a!2 (INV2 A B C D E F G D))))))
(check-sat)
